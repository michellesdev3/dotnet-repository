<Project>

  <!-- Get the analyzer from the CommunityToolkit.Mvvm NuGet package -->
  <Target Name="_MVVMToolkitGatherAnalyzers">
    <ItemGroup>
      <_MVVMToolkitAnalyzer Include="@(Analyzer)" Condition="'%(Analyzer.NuGetPackageId)' == 'CommunityToolkit.Mvvm'" />
    </ItemGroup>
  </Target>

  <!-- Remove the analyzer if using Roslyn 3.x (incremental generators require Roslyn 4.x) -->
  <Target Name="_MVVMToolkitRemoveAnalyzersForRoslyn3"
          AfterTargets="ResolvePackageDependenciesForBuild;ResolveNuGetPackageAssets"
          DependsOnTargets="_MVVMToolkitGatherAnalyzers">
    
    <!-- Use the CSharpCoreTargetsPath property to find the version of the compiler we are using.
         This is the same mechanism MSBuild uses to find the compiler.
         We could check the assembly version for any compiler assembly (since they all have the same version)
         but Microsoft.Build.Tasks.CodeAnalysis.dll is where MSBuild loads the compiler tasks from so if someone is
         getting creative with msbuild tasks/targets this is the "most correct" assembly to check. -->
    <GetAssemblyIdentity
      AssemblyFiles="$([System.IO.Path]::Combine(`$([System.IO.Path]::GetDirectoryName($(CSharpCoreTargetsPath)))`,`Microsoft.Build.Tasks.CodeAnalysis.dll`))">
      <Output TaskParameter="Assemblies" ItemName="CurrentCompilerAssemblyIdentity"/>
    </GetAssemblyIdentity>
    
    <PropertyGroup>
      <!-- Transform the resulting item from GetAssemblyIdentity into a property and check if the assembly version is less than 4.0 -->
      <CurrentCompilerVersion>@(CurrentCompilerAssemblyIdentity->'%(Version)')</CurrentCompilerVersion>
      <CurrentCompilerVersionIsNotNewEnough Condition="$([MSBuild]::VersionLessThan($(CurrentCompilerVersion), 4.0))">true</CurrentCompilerVersionIsNotNewEnough>
      <CurrentCompilerVersionIsNotNewEnough Condition="$(CurrentCompilerVersionIsNotNewEnough) == ''">false</CurrentCompilerVersionIsNotNewEnough>
    </PropertyGroup>
    
    <ItemGroup Condition ="$(CurrentCompilerVersionIsNotNewEnough) == 'true'">
      <Analyzer Remove="@(_MVVMToolkitAnalyzer)"/>
    </ItemGroup>
    <Warning Condition ="$(CurrentCompilerVersionIsNotNewEnough) == 'true'" Text="The MVVM Toolkit source generators have been disabled on the current configuration, as they need Roslyn 4.x in order to work. The MVVM Toolkit will work just fine, but features relying on the source generators will not be available."/>
  </Target>

</Project>
